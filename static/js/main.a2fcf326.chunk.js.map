{"version":3,"sources":["components/Button.js","components/Header.js","components/Footer.js","components/About.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","style","backgroundColor","color","className","onClick","text","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Footer","to","About","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","index","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","console","log","filter","toggleReminder","taskToToggle","updTask","path","exact","render","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2fcf326.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <div>\r\n             <button style={{backgroundColor: props.color}} className='btn' onClick={props.onClick}>{props.text}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue',\r\n    text: 'My Button',\r\n    onClick: ''\r\n}\r\n\r\nButton.propTypes = {\r\n    text : PropTypes.string,\r\n    color : PropTypes.string,\r\n    onClick: PropTypes.func\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { useLocation } from 'react-router-dom'\r\nimport Button from './Button'\r\n\r\nconst Header = ({title, onAdd, showAdd}) => {\r\n    const location = useLocation()\r\n\r\n    return (\r\n        <header className='header'>\r\n            <h1 >{title}</h1>\r\n            { location.pathname === '/' && (\r\n            <Button color={showAdd? 'orange':'green'} text={showAdd? 'Close': 'Add'} onClick={onAdd} />\r\n            )}\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker',\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header\r\n","import { Link } from 'react-router-dom'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <p>Copyright &copy; 2021</p>\r\n            <Link to='/about'>About</Link>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { Link } from 'react-router-dom'\r\n\r\nfunction About() {\r\n    return (\r\n        <div>\r\n            <h4>Version 1.0.0</h4>\r\n            <Link to='/'>Go Back</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import { FaTimes } from 'react-icons/fa';\r\n\r\nfunction Task({task, onDelete, onToggle}) {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder': '' }`} onDoubleClick={()=> onToggle(task.id)} >\r\n            <h3>{task.text} <FaTimes style={{color: 'red', cursor: 'pointer'}} onClick={()=>onDelete(task.id)} /></h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n// import PropTypes from 'prop-types'\r\n\r\nfunction Tasks({tasks, onDelete, onToggle}) {\r\n\r\n    return (\r\n        <>\r\n        {tasks.map((task, index) => (\r\n        <Task key={index} task={task} onDelete={onDelete} onToggle={onToggle}/>\r\n        ))}\r\n        </>\r\n    )\r\n}\r\n\r\n// Task.propTypes = {\r\n\r\n// }\r\n\r\nexport default Tasks\r\n\r\n","import { useState } from 'react'\r\n\r\nconst AddTask = ({onAdd}) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!text){\r\n            alert('please add a task')\r\n            return\r\n        }\r\n\r\n        onAdd({ text, day, reminder})\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type='text' placeholder='Add Task' value={text} onChange={(e) => setText(e.target.value)}/>\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Date</label>\r\n                <input type='text' placeholder='Add Date' value={day} onChange={(e) => setDay(e.target.value)}/>\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type='checkbox'\r\n                checked={reminder}\r\n                  value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)} />\r\n            </div>\r\n\r\n            <input type='submit' value='Save Task' className='btn btn-block' />\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport Header from  './components/Header'\nimport Footer from  './components/Footer'\nimport About from  './components/About'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState( [])\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  }, [])\n\n\n  // Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch(`http://localhost:5000/tasks`)\n    const data = await res.json()\n    return data;\n  }\n\n// Fetch Task\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()\n    return data;\n  }\n\n// Add Task\nconst addTask = async(task) => {\n       const res = await fetch(`http://localhost:5000/tasks`, { \n         method: 'POST',\n         headers:{\n           'Content-type': 'application/json'\n         },\n         body:JSON.stringify(task)\n       })\n\n       const data = await res.json()\n       setTasks([...tasks, data])\n\n  // const id = Math.floor(Math.random() * 10000+1)\n  // const newTask = {id, ...task }\n  // setTasks([...tasks, newTask])\n}\n\n// Delete Task\nconst deleteTask = async (id) => {\n  console.log(id);\n\n  await fetch(`http://localhost:5000/tasks/${id}`, {method: 'DELETE'})\n\n  setTasks(tasks.filter((task) => task.id !== id))\n\n}\n\n// Toggle Reminder\nconst toggleReminder  = async (id) => {\n  const taskToToggle = await fetchTask(id)\n  const updTask = {...taskToToggle, reminder: !taskToToggle.reminder }\n\n  const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(updTask)\n  })\n\n  const data = await res.json()\n\n\n  setTasks(tasks.map((task) => task.id === id ? {\n    ...task, reminder: !task.reminder\n  } : task))\n}\n\n\n  return (\n    <Router>\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n      \n\n<Route path='/' exact render={(props) => (\n<>\n{showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>\n      ) : ('No Tasks to show')}\n\n</>\n)} />\n      <Route path='/about' component={About}/>\n      <Footer/>\n      \n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}